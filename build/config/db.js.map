{"version":3,"sources":["../../src/config/db.js"],"names":["result","require","config","error","console","log","connectDB","options","useNewUrlParser","useUnifiedTopology","process","env","NODE_ENV","DEV_MONGODB_URI","TEST_MONGODB_URI","mongoose","connect","connection","host","dropDB","collection","collections","drop"],"mappings":";;;;;;;;;;;;;AAKA;;AALA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,EAAb;;AACA,IAAIF,MAAM,CAACG,KAAX,EAAkB;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,KAAnB;AACH;;AAGD;AAGA;AAEA,IAAMG,SAAS;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIJC,YAAAA,OAJI,GAIM;AACZC,cAAAA,eAAe,EAAE,IADL;AAEZ;AACA;AACAC,cAAAA,kBAAkB,EAAE;AAJR,aAJN;AAAA,0BAYFC,OAAO,CAACC,GAAR,CAAYC,QAZV;AAAA,4CAaD,aAbC,uBAqBD,MArBC;AAAA;;AAAA;AAcFR,YAAAA,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACC,GAAR,CAAYE,eAAxB;AACAT,YAAAA,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACC,GAAR,CAAYG,gBAAxB;AAfE;AAAA,mBAiBeC,qBAASC,OAAT,CAAiBN,OAAO,CAACC,GAAR,CAAYE,eAA7B,EAA8CN,OAA9C,CAjBf;;AAAA;AAiBFS,YAAAA,OAjBE;AAkBFZ,YAAAA,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACC,GAAR,CAAYE,eAAxB;AAlBE;;AAAA;AAAA;AAAA,mBAsBcE,qBAASC,OAAT,CAAiBN,OAAO,CAACC,GAAR,CAAYG,gBAA7B,EAA+CP,OAA/C,CAtBd;;AAAA;AAsBFS,YAAAA,OAtBE;AAAA;;AAAA;AAyBFZ,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AAzBE;AA2BV;AACAD,YAAAA,OAAO,CAACC,GAAR,mCAAuCK,OAAO,CAACC,GAAR,CAAYC,QAAnD,uBAAwEI,OAAO,CAACC,UAAR,CAAmBC,IAA3F;AA5BU;AAAA;;AAAA;AAAA;AAAA;AA8BVd,YAAAA,OAAO,CAACC,GAAR;AA9BU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATC,SAAS;AAAA;AAAA;AAAA,GAAf;;;;AAmCA,IAAMa,MAAM;AAAA,4FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEP,iBAASC,UAAT,IAAuBL,qBAASC,OAAT,CAAiBK,WAAxC,EAAqD;AACjDN,mCAASE,UAAT,CAAoBI,WAApB,CAAgCD,UAAhC,EAA4CE,IAA5C,CAAiD,YAAM,CAAG,CAA1D;AACH;;AAJM;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANH,MAAM;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["let result = require(\"dotenv\").config();\r\nif (result.error) {\r\n    console.log(result.error);\r\n}\r\n\r\nimport mongoose from \"mongoose\";\r\n// import dotenv from \"dotenv\";\r\n\r\n\r\n// dotenv.config();\r\n\r\nconst connectDB = async () => {\r\n\r\n    try {\r\n        let connect;\r\n        const options = {\r\n            useNewUrlParser: true,\r\n            // useCreateIndex: true,\r\n            // useFindAndModify: false,\r\n            useUnifiedTopology: true,\r\n\r\n        }\r\n\r\n        switch (process.env.NODE_ENV) {\r\n            case \"development\":\r\n                console.log(process.env.DEV_MONGODB_URI);\r\n                console.log(process.env.TEST_MONGODB_URI);\r\n\r\n                connect =  await mongoose.connect(process.env.DEV_MONGODB_URI, options);\r\n                console.log(process.env.DEV_MONGODB_URI);\r\n\r\n                break;\r\n            case \"test\":\r\n                connect = await mongoose.connect(process.env.TEST_MONGODB_URI, options);\r\n                break;\r\n            default:\r\n                console.log(\"Connection did not succeed\")\r\n        }\r\n        // connect.then(result =>console.log(result) );\r\n        console.log(`connected to MongoDB in ${process.env.NODE_ENV}  mode on ${connect.connection.host}`)\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error;\r\n    }\r\n}\r\n\r\nconst dropDB = async () => {\r\n    try {\r\n        for (let collection in mongoose.connect.collections) {\r\n            mongoose.connection.collections[collection].drop(() => { })\r\n        }\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nexport { connectDB, dropDB };"],"file":"db.js"}